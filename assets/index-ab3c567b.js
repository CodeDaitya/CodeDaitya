(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const c of t.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function n(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function s(e){if(e.ep)return;e.ep=!0;const t=n(e);fetch(e.href,t)}})();const a="https://api.github.com",i="CodeDaitya",p="publish";async function l(){try{const o=await(await fetch(`${a}/orgs/${i}/repos?type=public`)).json();return o.message?[]:o}catch(r){console.error(r)}return[]}async function d(r){return(await(await fetch(`${a}/repos/${i}/${r}/topics`,{headers:{Accept:"application/vnd.github.mercy-preview+json"}})).json()).names}function u(r,o){const n=document.createElement("div");return n.className="repo-card",n.innerHTML=`
        <h2>${r.name}</h2>
        <p>${r.description||"No description available."}</p>
        <a href="${o}" target="_blank">Visit Project</a>
    `,n}async function f(){const r=document.getElementById("repo-list"),o=await l();let n=0;for(const s of o)try{if((await d(s.name)).includes(p)){const t=`https://${i}.github.io/${s.name}`,c=u(s,t);r.appendChild(c),++n}}catch(e){console.error(e)}if(!n){const s=document.createElement("div");s.className="repo-card",s.innerHTML=`
            <h2>No published projects available</h2>
            <p>Either there are no published project at this time, or there was a problem fetching them</p>
        `,r.appendChild(s)}}f();
